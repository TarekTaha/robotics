Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o (exit)
/usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_clear_bss.o)
                              DrawerSecurity.o (__do_clear_bss)
/usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(itoa.o)
                              DrawerSecurity.o (itoa)
/usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(itoa.o) (strrev)
/usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

Buffer_RX           0xc               DrawerSecurity.o
ROM                 0x8               DrawerSecurity.o

Discarded input sections

 .stabstr       0x00000000        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o
 .stabstr       0x00000000        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(itoa.o)
 .stabstr       0x00000000        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(strrev.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o
LOAD DrawerSecurity.o
LOAD lcd.o
LOAD 1wire.o
LOAD uart.o
LOAD /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xf84
 *(.vectors)
 .vectors       0x00000000       0x8c /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000008c       0x2b DrawerSecurity.o
 .progmem.data  0x000000b7      0x100 1wire.o
                0x000000b7                dscrc_table
                0x000001b8                . = ALIGN (0x2)
 *fill*         0x000001b7        0x1 00
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
 *(.init0)
 .init0         0x000001b8        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o
                0x000001b8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000001b8        0xc /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000001c4       0x1a /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o
                0x000001c4                __do_copy_data
 .init4         0x000001de       0x10 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_clear_bss.o)
                0x000001de                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000001ee        0x8 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o
 *(.init9)
 *(.text)
 .text          0x000001f6        0x4 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o
                0x000001f6                __vector_22
                0x000001f6                __vector_28
                0x000001f6                __vector_1
                0x000001f6                __vector_32
                0x000001f6                __vector_34
                0x000001f6                __vector_24
                0x000001f6                __vector_12
                0x000001f6                __bad_interrupt
                0x000001f6                __vector_6
                0x000001f6                __vector_3
                0x000001f6                __vector_23
                0x000001f6                __vector_25
                0x000001f6                __vector_11
                0x000001f6                __vector_13
                0x000001f6                __vector_17
                0x000001f6                __vector_7
                0x000001f6                __vector_27
                0x000001f6                __vector_5
                0x000001f6                __vector_33
                0x000001f6                __vector_4
                0x000001f6                __vector_9
                0x000001f6                __vector_2
                0x000001f6                __vector_21
                0x000001f6                __vector_15
                0x000001f6                __vector_29
                0x000001f6                __vector_8
                0x000001f6                __vector_26
                0x000001f6                __vector_14
                0x000001f6                __vector_10
                0x000001f6                __vector_16
                0x000001f6                __vector_20
 .text          0x000001fa      0x29c DrawerSecurity.o
                0x000002f2                MainMenu
                0x00000296                AddUserMenu
                0x0000032e                main
                0x000001fa                getKey
                0x0000027e                Delay
                0x000002bc                AccessMenu
 .text          0x00000496      0x23e lcd.o
                0x0000057e                lcd_data
                0x00000592                lcd_gotoxy
                0x000005d6                lcd_putc
                0x000005ce                lcd_home
                0x000005c6                lcd_clrscr
                0x000005be                lcd_getxy
                0x00000618                lcd_puts
                0x00000638                lcd_puts_p
                0x0000065e                lcd_init
                0x0000056a                lcd_command
 .text          0x000006d4      0x510 1wire.o
                0x0000087a                OWSendCmd
                0x00000840                OWBlock
                0x00000ada                OWFirst
                0x00000804                OWTouchByte
                0x00000b22                OWWriteEEPROM
                0x0000090e                OWNext
                0x00000aee                OWReadRom
                0x000007b4                OWWriteByte
                0x000008fa                OWCRC
                0x000008ca                checkcrc
                0x00000ba0                OWReadAllEEPROM
                0x00000784                OWReadBit
                0x00000736                OWWriteBit
                0x000006e6                OWTouchReset
                0x000007d2                OWReadByte
 .text          0x00000be4      0x314 uart.o
                0x00000e4e                uart1_getc
                0x00000eb4                uart1_puts
                0x00000e16                uart1_init
                0x00000dc0                __vector_31
                0x00000ed2                uart1_puts_p
                0x00000d60                __vector_30
                0x00000d1c                uart_puts
                0x00000d3a                uart_puts_p
                0x00000c40                __vector_19
                0x00000c8c                uart_init
                0x00000cbe                uart_getc
                0x00000cf6                uart_putc
                0x00000e86                uart1_putc
                0x00000be4                __vector_18
 .text          0x00000ef8        0x0 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_exit.o)
 .text          0x00000ef8        0x0 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000ef8       0x42 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(itoa.o)
                0x00000ef8                itoa
 .text          0x00000f3a       0x20 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(strrev.o)
                0x00000f3a                strrev
 .text          0x00000f5a        0x0 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_udivmodhi4.o)
                0x00000f5a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000f5a        0x0 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000f5a        0x0 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000f5a       0x28 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_udivmodhi4.o)
                0x00000f5a                __udivmodhi4
                0x00000f82                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000f82        0x0 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_exit.o)
                0x00000f82                exit
                0x00000f82                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000f82        0x2 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000f84                _etext = .

.data           0x00800100       0xe8 load address 0x00000f84
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o
 .data          0x00800100       0xe8 DrawerSecurity.o
                0x008001d7                keys
 .data          0x008001e8        0x0 lcd.o
 .data          0x008001e8        0x0 1wire.o
 .data          0x008001e8        0x0 uart.o
 .data          0x008001e8        0x0 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_exit.o)
 .data          0x008001e8        0x0 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x008001e8        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(itoa.o)
 .data          0x008001e8        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(strrev.o)
 .data          0x008001e8        0x0 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008001e8                . = ALIGN (0x2)
                0x008001e8                _edata = .
                0x008001e8                PROVIDE (__data_end, .)

.bss            0x008001e8       0xa4
                0x008001e8                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008001e8        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o
 .bss           0x008001e8        0x3 DrawerSecurity.o
 .bss           0x008001eb        0x0 lcd.o
 .bss           0x008001eb        0x3 1wire.o
 .bss           0x008001ee       0x8a uart.o
 .bss           0x00800278        0x0 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_exit.o)
 .bss           0x00800278        0x0 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00800278        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(itoa.o)
 .bss           0x00800278        0x0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(strrev.o)
 .bss           0x00800278        0x0 /usr/lib/gcc/avr/4.1.2/avr5/libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800278       0x14 DrawerSecurity.o
                0x00800278                Buffer_RX
                0x00800284                ROM
                0x0080028c                PROVIDE (__bss_end, .)
                0x00000f84                __data_load_start = LOADADDR (.data)
                0x0000106c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080028c        0x0
                0x0080028c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080028c                PROVIDE (__noinit_end, .)
                0x0080028c                _end = .
                0x0080028c                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000      0x69c
 *(.stab)
 .stab          0x00000000      0x414 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o
 .stab          0x00000414      0x1b0 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x000005c4       0xd8 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000       0xb4
 *(.stabstr)
 .stabstr       0x00000000       0xb4 /usr/lib/gcc/avr/4.1.2/../../../../avr/lib/avr5/crtm128.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(project.out elf32-avr)
